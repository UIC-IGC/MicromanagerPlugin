/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package DSLM;

/**
 *
 * @author Gualda
 */
public class NewJDialog2 extends javax.swing.JDialog {

    /**
     * Creates new form NewJDialog
     */
    public NewJDialog2(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jPanel2 = new javax.swing.JPanel();
        TimeLapsePanel = new javax.swing.JPanel();
        TimeFrames = new javax.swing.JSpinner();
        IntervalTime = new javax.swing.JTextField();
        IntervalUnits = new javax.swing.JComboBox();
        TimeLapseCheckBox = new javax.swing.JCheckBox();
        NumberLabel = new javax.swing.JLabel();
        IntervalLabel = new javax.swing.JLabel();
        AcquireButton = new javax.swing.JButton();
        ShutterButton = new javax.swing.JButton();
        StackPanel = new javax.swing.JPanel();
        StackCheckBox = new javax.swing.JCheckBox();
        StartField = new javax.swing.JTextField();
        SetStartButton = new javax.swing.JButton();
        EndField = new javax.swing.JTextField();
        SetEndButton = new javax.swing.JButton();
        StepField = new javax.swing.JTextField();
        StartLabel = new javax.swing.JLabel();
        EndLabel = new javax.swing.JLabel();
        StepLabel = new javax.swing.JLabel();
        StackComboBox = new javax.swing.JComboBox();
        ShutterStackCheckBox = new javax.swing.JCheckBox();
        RotationPanel = new javax.swing.JPanel();
        RotationComboBox = new javax.swing.JComboBox();
        RotationLabel = new javax.swing.JLabel();
        ShutterRotationCheckBox = new javax.swing.JCheckBox();
        RotationSampleLabel = new javax.swing.JLabel();
        SaveImagesPanel = new javax.swing.JPanel();
        SaveCheckBox = new javax.swing.JCheckBox();
        RootDirectoryField = new javax.swing.JTextField();
        RootLabel = new javax.swing.JLabel();
        DirectoryButton = new javax.swing.JButton();
        FileNameField = new javax.swing.JTextField();
        FileLabel = new javax.swing.JLabel();
        StageControlPanel = new javax.swing.JPanel();
        UPUPButton = new javax.swing.JButton();
        UPButton = new javax.swing.JButton();
        DownButton = new javax.swing.JButton();
        DownDownButton = new javax.swing.JButton();
        PositionField = new javax.swing.JTextField();
        PositionLabel = new javax.swing.JLabel();
        UpUpField = new javax.swing.JTextField();
        UpField = new javax.swing.JTextField();
        StageControlLabel = new javax.swing.JLabel();
        RotationControlPanel = new javax.swing.JPanel();
        RotationControlLabel = new javax.swing.JLabel();
        LeftButton = new javax.swing.JButton();
        RightButton = new javax.swing.JButton();
        AnglePositionField = new javax.swing.JTextField();
        AngleLabel = new javax.swing.JLabel();
        MakeZeroButton = new javax.swing.JButton();
        StepAngleComboBox = new javax.swing.JComboBox();
        StepAngleLabel = new javax.swing.JLabel();
        LineCheckBox = new javax.swing.JCheckBox();
        GalvoControlPanel = new javax.swing.JPanel();
        GalvoCheckBox = new javax.swing.JCheckBox();
        GAmpTextField = new javax.swing.JTextField();
        GAmpLabel = new javax.swing.JLabel();
        GFreqTextField = new javax.swing.JTextField();
        GFreqLabel = new javax.swing.JLabel();
        GResetButton = new javax.swing.JButton();
        GHomeButton = new javax.swing.JButton();
        ChannelControlPanel = new javax.swing.JPanel();
        Excitation_ComboBox = new javax.swing.JComboBox();
        Emission_ComboBox = new javax.swing.JComboBox();
        Excitation_label = new javax.swing.JLabel();
        Emission_label = new javax.swing.JLabel();
        ChannelScrollPane = new javax.swing.JScrollPane();
        Channels_table = new javax.swing.JTable();
        Channel_CheckBox = new javax.swing.JCheckBox();
        Message_Pannel = new javax.swing.JPanel();
        Message_scroll_pane = new javax.swing.JScrollPane();
        MessageTextArea = new javax.swing.JTextArea();
        MessageLabel = new javax.swing.JLabel();
        ModePanel = new javax.swing.JPanel();
        ModeComboBox = new javax.swing.JComboBox();
        ModeLabel = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SPIM CONTROLS");
        setPreferredSize(490,536);

        TimeLapsePanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        TimeFrames.setToolTipText("Number of time frames");
        TimeFrames.setName("");
        TimeFrames.setValue(2);

        IntervalTime.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        IntervalTime.setText("10");
        IntervalTime.setToolTipText("Interval between stack of images (in ms, s or min)");
        IntervalTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IntervalTimeActionPerformed(evt);
            }
        });

        IntervalUnits.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ms", "s", "min" }));
        IntervalUnits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IntervalUnitsActionPerformed(evt);
            }
        });

        TimeLapseCheckBox.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        TimeLapseCheckBox.setText("Time Lapse");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, TimeFrames, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), TimeLapseCheckBox, org.jdesktop.beansbinding.BeanProperty.create("selected"), "TimeLapseOnOff");
        bindingGroup.addBinding(binding);

        TimeLapseCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimeLapseCheckBoxActionPerformed(evt);
            }
        });

        NumberLabel.setText("Number");

        IntervalLabel.setText("Interval");

        javax.swing.GroupLayout TimeLapsePanelLayout = new javax.swing.GroupLayout(TimeLapsePanel);
        TimeLapsePanel.setLayout(TimeLapsePanelLayout);
        TimeLapsePanelLayout.setHorizontalGroup(
            TimeLapsePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TimeLapsePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TimeLapsePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(TimeLapsePanelLayout.createSequentialGroup()
                        .addComponent(NumberLabel)
                        .addGap(18, 18, 18)
                        .addComponent(TimeFrames))
                    .addGroup(TimeLapsePanelLayout.createSequentialGroup()
                        .addComponent(IntervalLabel)
                        .addGap(18, 18, 18)
                        .addComponent(IntervalTime, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(IntervalUnits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14))
            .addGroup(TimeLapsePanelLayout.createSequentialGroup()
                .addComponent(TimeLapseCheckBox)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        TimeLapsePanelLayout.setVerticalGroup(
            TimeLapsePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TimeLapsePanelLayout.createSequentialGroup()
                .addComponent(TimeLapseCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TimeLapsePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TimeLapsePanelLayout.createSequentialGroup()
                        .addComponent(NumberLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(IntervalLabel))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TimeLapsePanelLayout.createSequentialGroup()
                        .addComponent(TimeFrames, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(TimeLapsePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(IntervalUnits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(IntervalTime))))
                .addContainerGap())
        );

        AcquireButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        AcquireButton.setText("Acquire!");
        AcquireButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AcquireButtonActionPerformed(evt);
            }
        });

        ShutterButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ShutterButton.setText("Shutter");

        StackPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        StackCheckBox.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        StackCheckBox.setText("Stack of Images");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, StartField, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), StackCheckBox, org.jdesktop.beansbinding.BeanProperty.create("selected"), "stackonoff");
        bindingGroup.addBinding(binding);

        StackCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StackCheckBoxActionPerformed(evt);
            }
        });

        StartField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        StartField.setText("0");
        StartField.setToolTipText("Starting position the stack in microns");

        SetStartButton.setText("Set");

        EndField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        EndField.setText("10");
        EndField.setToolTipText("Finishing position of the stack in microns");

        SetEndButton.setText("Set");

        StepField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        StepField.setText("5");
        StepField.setToolTipText("Steps in micros between images of the stack");

        StartLabel.setText("Start (microns)");

        EndLabel.setText("End (microns)");

        StepLabel.setText("Steps (microns)");

        StackComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Relative Z", "Absolute Z" }));

        ShutterStackCheckBox.setText("Use Shutter");

        javax.swing.GroupLayout StackPanelLayout = new javax.swing.GroupLayout(StackPanel);
        StackPanel.setLayout(StackPanelLayout);
        StackPanelLayout.setHorizontalGroup(
            StackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StackPanelLayout.createSequentialGroup()
                .addComponent(StackCheckBox)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(StackPanelLayout.createSequentialGroup()
                .addGroup(StackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(StackPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(StackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(StepLabel)
                            .addComponent(EndLabel)
                            .addComponent(StartLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(StackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(StackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(StackPanelLayout.createSequentialGroup()
                                    .addComponent(StartField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(SetStartButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(StackPanelLayout.createSequentialGroup()
                                    .addComponent(EndField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(SetEndButton)))
                            .addComponent(StepField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(StackComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(StackPanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(ShutterStackCheckBox)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        StackPanelLayout.setVerticalGroup(
            StackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StackPanelLayout.createSequentialGroup()
                .addComponent(StackCheckBox)
                .addGap(9, 9, 9)
                .addGroup(StackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(StackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(StartField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(SetStartButton))
                    .addComponent(StartLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(StackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(StackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(EndField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(SetEndButton))
                    .addComponent(EndLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(StackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StepField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StepLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(StackComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ShutterStackCheckBox)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        RotationPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        RotationComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "45", "90", "180" }));
        RotationComboBox.setToolTipText("Select the rotation angle for the automatic recording");

        RotationLabel.setText("Rotation angle");

        ShutterRotationCheckBox.setText("Use Shutter");

        RotationSampleLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        RotationSampleLabel.setText("Rotation");

        javax.swing.GroupLayout RotationPanelLayout = new javax.swing.GroupLayout(RotationPanel);
        RotationPanel.setLayout(RotationPanelLayout);
        RotationPanelLayout.setHorizontalGroup(
            RotationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RotationPanelLayout.createSequentialGroup()
                .addGroup(RotationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RotationPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(RotationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(RotationPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(ShutterRotationCheckBox))
                            .addGroup(RotationPanelLayout.createSequentialGroup()
                                .addComponent(RotationLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(RotationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(RotationPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(RotationSampleLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        RotationPanelLayout.setVerticalGroup(
            RotationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RotationPanelLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(RotationSampleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RotationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RotationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RotationLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(ShutterRotationCheckBox))
        );

        SaveImagesPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        SaveCheckBox.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        SaveCheckBox.setText("Save Images");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, RootDirectoryField, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), SaveCheckBox, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        RootDirectoryField.setText("D:\\Data_SPIM");

        RootLabel.setText("Root Directory");

        DirectoryButton.setText("...");
        DirectoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DirectoryButtonActionPerformed(evt);
            }
        });

        FileNameField.setText("Test_sample");

        FileLabel.setText("File name");

        javax.swing.GroupLayout SaveImagesPanelLayout = new javax.swing.GroupLayout(SaveImagesPanel);
        SaveImagesPanel.setLayout(SaveImagesPanelLayout);
        SaveImagesPanelLayout.setHorizontalGroup(
            SaveImagesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SaveImagesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SaveImagesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SaveCheckBox)
                    .addGroup(SaveImagesPanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(SaveImagesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RootLabel)
                            .addComponent(FileLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(SaveImagesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RootDirectoryField, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                            .addComponent(FileNameField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DirectoryButton)))
                .addGap(13, 13, 13))
        );
        SaveImagesPanelLayout.setVerticalGroup(
            SaveImagesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SaveImagesPanelLayout.createSequentialGroup()
                .addComponent(SaveCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SaveImagesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RootDirectoryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RootLabel)
                    .addComponent(DirectoryButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SaveImagesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FileNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FileLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        StageControlPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        UPUPButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        UPUPButton.setText("˄˄");
        UPUPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UPUPButtonActionPerformed(evt);
            }
        });

        UPButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        UPButton.setText("˄");

        DownButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        DownButton.setText("˅");
        DownButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DownButtonActionPerformed(evt);
            }
        });

        DownDownButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        DownDownButton.setText("˅˅");

        PositionField.setBackground(new java.awt.Color(230, 230, 230));
        PositionField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        PositionField.setText("0");
        PositionField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PositionFieldActionPerformed(evt);
            }
        });

        PositionLabel.setText("Position");

        UpUpField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        UpUpField.setText("100");

        UpField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        UpField.setText("10");

        StageControlLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        StageControlLabel.setText("Stage Control");

        javax.swing.GroupLayout StageControlPanelLayout = new javax.swing.GroupLayout(StageControlPanel);
        StageControlPanel.setLayout(StageControlPanelLayout);
        StageControlPanelLayout.setHorizontalGroup(
            StageControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StageControlPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(StageControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StageControlLabel)
                    .addGroup(StageControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StageControlPanelLayout.createSequentialGroup()
                            .addComponent(UpUpField, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(UPUPButton))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StageControlPanelLayout.createSequentialGroup()
                            .addComponent(UpField, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(StageControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(UPButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(DownButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(DownDownButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StageControlPanelLayout.createSequentialGroup()
                            .addComponent(PositionLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(PositionField, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        StageControlPanelLayout.setVerticalGroup(
            StageControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StageControlPanelLayout.createSequentialGroup()
                .addComponent(StageControlLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(StageControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UPUPButton)
                    .addComponent(UpUpField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(StageControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UPButton)
                    .addComponent(UpField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(StageControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PositionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PositionLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DownButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DownDownButton)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        RotationControlPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        RotationControlLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        RotationControlLabel.setText("Rotation Control");

        LeftButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        LeftButton.setText("<");

        RightButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        RightButton.setText(">");

        AnglePositionField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        AnglePositionField.setText("180.00");
        AnglePositionField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnglePositionFieldActionPerformed(evt);
            }
        });

        AngleLabel.setText("  Angle");

        MakeZeroButton.setText("Make Zero");

        StepAngleComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "45", "90", "180" }));
        StepAngleComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StepAngleComboBoxActionPerformed(evt);
            }
        });

        StepAngleLabel.setText("Step");

        LineCheckBox.setText("Line");
        LineCheckBox.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        LineCheckBox.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        LineCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LineCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout RotationControlPanelLayout = new javax.swing.GroupLayout(RotationControlPanel);
        RotationControlPanel.setLayout(RotationControlPanelLayout);
        RotationControlPanelLayout.setHorizontalGroup(
            RotationControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RotationControlPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(LeftButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RotationControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AngleLabel)
                    .addGroup(RotationControlPanelLayout.createSequentialGroup()
                        .addComponent(AnglePositionField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RightButton)))
                .addGap(1, 1, 1))
            .addGroup(RotationControlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(RotationControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RotationControlPanelLayout.createSequentialGroup()
                        .addComponent(RotationControlLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(RotationControlPanelLayout.createSequentialGroup()
                        .addGroup(RotationControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(RotationControlPanelLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(StepAngleLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(StepAngleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RotationControlPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(MakeZeroButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(LineCheckBox)))
                .addContainerGap())
        );
        RotationControlPanelLayout.setVerticalGroup(
            RotationControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RotationControlPanelLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(RotationControlLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(RotationControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RotationControlPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(AngleLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(RotationControlPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(RotationControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LeftButton)
                            .addComponent(AnglePositionField)
                            .addComponent(RightButton))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(RotationControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(RotationControlPanelLayout.createSequentialGroup()
                        .addGroup(RotationControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(StepAngleLabel)
                            .addComponent(StepAngleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MakeZeroButton))
                    .addComponent(LineCheckBox)))
        );

        GalvoControlPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        GalvoCheckBox.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        GalvoCheckBox.setText("Galvo");

        GAmpTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        GAmpTextField.setText("0");

        GAmpLabel.setText(" Amp. (V)");

        GFreqTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        GFreqTextField.setText("0");
        GFreqTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GFreqTextFieldActionPerformed(evt);
            }
        });

        GFreqLabel.setText("Freq. (Hz)");

        GResetButton.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        GResetButton.setText("RESET");

        GHomeButton.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        GHomeButton.setText("HOME");
        GHomeButton.setMaximumSize(new java.awt.Dimension(59, 19));
        GHomeButton.setMinimumSize(new java.awt.Dimension(59, 19));
        GHomeButton.setPreferredSize(new java.awt.Dimension(59, 19));

        javax.swing.GroupLayout GalvoControlPanelLayout = new javax.swing.GroupLayout(GalvoControlPanel);
        GalvoControlPanel.setLayout(GalvoControlPanelLayout);
        GalvoControlPanelLayout.setHorizontalGroup(
            GalvoControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GalvoControlPanelLayout.createSequentialGroup()
                .addComponent(GalvoCheckBox)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(GalvoControlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(GalvoControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(GalvoControlPanelLayout.createSequentialGroup()
                        .addComponent(GResetButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GHomeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(GalvoControlPanelLayout.createSequentialGroup()
                        .addGroup(GalvoControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(GFreqLabel)
                            .addComponent(GAmpLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(GalvoControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(GAmpTextField)
                            .addComponent(GFreqTextField))
                        .addContainerGap())))
        );
        GalvoControlPanelLayout.setVerticalGroup(
            GalvoControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GalvoControlPanelLayout.createSequentialGroup()
                .addComponent(GalvoCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(GalvoControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GAmpTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GAmpLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(GalvoControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GFreqTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GFreqLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(GalvoControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GResetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(GHomeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5))
        );

        ChannelControlPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        Excitation_ComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Filter 1", "Filter 2", "Filter 3", "Filter 4", "Filter 5", "Filter 6" }));

        Emission_ComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Filter 1", "Filter 2", "Filter 3", "Filter 4", "Filter 5", "Filter 6" }));

        Excitation_label.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Excitation_label.setText("Excitation");

        Emission_label.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Emission_label.setText("Emission");

        Channels_table.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        Channels_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "Excitation", "Emission", "Color", "ON/OFF"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        Channels_table.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Channels_table.setRowHeight(13);
        ChannelScrollPane.setViewportView(Channels_table);

        Channel_CheckBox.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Channel_CheckBox.setText("Channels");

        javax.swing.GroupLayout ChannelControlPanelLayout = new javax.swing.GroupLayout(ChannelControlPanel);
        ChannelControlPanel.setLayout(ChannelControlPanelLayout);
        ChannelControlPanelLayout.setHorizontalGroup(
            ChannelControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ChannelControlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Channel_CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ChannelScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ChannelControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ChannelControlPanelLayout.createSequentialGroup()
                        .addComponent(Excitation_label)
                        .addGap(18, 18, 18)
                        .addComponent(Emission_label))
                    .addGroup(ChannelControlPanelLayout.createSequentialGroup()
                        .addComponent(Excitation_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Emission_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 13, Short.MAX_VALUE))
        );
        ChannelControlPanelLayout.setVerticalGroup(
            ChannelControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ChannelScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(ChannelControlPanelLayout.createSequentialGroup()
                .addComponent(Channel_CheckBox)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(ChannelControlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ChannelControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Excitation_label)
                    .addComponent(Emission_label))
                .addGap(5, 5, 5)
                .addGroup(ChannelControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Excitation_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Emission_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        Message_Pannel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Message_Pannel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        MessageTextArea.setColumns(20);
        MessageTextArea.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        MessageTextArea.setRows(2);
        Message_scroll_pane.setViewportView(MessageTextArea);

        MessageLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        MessageLabel.setText("Messages");

        javax.swing.GroupLayout Message_PannelLayout = new javax.swing.GroupLayout(Message_Pannel);
        Message_Pannel.setLayout(Message_PannelLayout);
        Message_PannelLayout.setHorizontalGroup(
            Message_PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Message_PannelLayout.createSequentialGroup()
                .addGroup(Message_PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MessageLabel)
                    .addComponent(Message_scroll_pane, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        Message_PannelLayout.setVerticalGroup(
            Message_PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Message_PannelLayout.createSequentialGroup()
                .addComponent(MessageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Message_scroll_pane, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE))
        );

        ModePanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        ModeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "DSLM/SPIM", "OPT" }));

        ModeLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ModeLabel.setText("Mode");

        javax.swing.GroupLayout ModePanelLayout = new javax.swing.GroupLayout(ModePanel);
        ModePanel.setLayout(ModePanelLayout);
        ModePanelLayout.setHorizontalGroup(
            ModePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ModePanelLayout.createSequentialGroup()
                .addComponent(ModeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ModeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        ModePanelLayout.setVerticalGroup(
            ModePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ModePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ModePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ModeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ModeLabel))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(StageControlPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RotationControlPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ModePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TimeLapsePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RotationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(StackPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(GalvoControlPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AcquireButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ShutterButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(SaveImagesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Message_Pannel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(ChannelControlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(RotationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(StageControlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(TimeLapsePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(AcquireButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ShutterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(GalvoControlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(StackPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ChannelControlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SaveImagesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Message_Pannel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(RotationControlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ModePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(66, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TimeLapseCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TimeLapseCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TimeLapseCheckBoxActionPerformed

    private void IntervalUnitsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IntervalUnitsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IntervalUnitsActionPerformed

    private void IntervalTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IntervalTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IntervalTimeActionPerformed

    private void UPUPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UPUPButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UPUPButtonActionPerformed

    private void DownButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DownButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DownButtonActionPerformed

    private void StackCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StackCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StackCheckBoxActionPerformed

    private void AcquireButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AcquireButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AcquireButtonActionPerformed

    private void DirectoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DirectoryButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DirectoryButtonActionPerformed

    private void StepAngleComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StepAngleComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StepAngleComboBoxActionPerformed

    private void PositionFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PositionFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PositionFieldActionPerformed

    private void GFreqTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GFreqTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GFreqTextFieldActionPerformed

    private void AnglePositionFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnglePositionFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AnglePositionFieldActionPerformed

    private void LineCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LineCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LineCheckBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                NewJDialog2 dialog = new NewJDialog2(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AcquireButton;
    private javax.swing.JLabel AngleLabel;
    private javax.swing.JTextField AnglePositionField;
    private javax.swing.JPanel ChannelControlPanel;
    private javax.swing.JScrollPane ChannelScrollPane;
    private javax.swing.JCheckBox Channel_CheckBox;
    private javax.swing.JTable Channels_table;
    private javax.swing.JButton DirectoryButton;
    private javax.swing.JButton DownButton;
    private javax.swing.JButton DownDownButton;
    private javax.swing.JComboBox Emission_ComboBox;
    private javax.swing.JLabel Emission_label;
    private javax.swing.JTextField EndField;
    private javax.swing.JLabel EndLabel;
    private javax.swing.JComboBox Excitation_ComboBox;
    private javax.swing.JLabel Excitation_label;
    private javax.swing.JLabel FileLabel;
    private javax.swing.JTextField FileNameField;
    private javax.swing.JLabel GAmpLabel;
    private javax.swing.JTextField GAmpTextField;
    private javax.swing.JLabel GFreqLabel;
    private javax.swing.JTextField GFreqTextField;
    private javax.swing.JButton GHomeButton;
    private javax.swing.JButton GResetButton;
    private javax.swing.JCheckBox GalvoCheckBox;
    private javax.swing.JPanel GalvoControlPanel;
    private javax.swing.JLabel IntervalLabel;
    private javax.swing.JTextField IntervalTime;
    private javax.swing.JComboBox IntervalUnits;
    private javax.swing.JButton LeftButton;
    private javax.swing.JCheckBox LineCheckBox;
    private javax.swing.JButton MakeZeroButton;
    private javax.swing.JLabel MessageLabel;
    private javax.swing.JTextArea MessageTextArea;
    private javax.swing.JPanel Message_Pannel;
    private javax.swing.JScrollPane Message_scroll_pane;
    private javax.swing.JComboBox ModeComboBox;
    private javax.swing.JLabel ModeLabel;
    private javax.swing.JPanel ModePanel;
    private javax.swing.JLabel NumberLabel;
    private javax.swing.JTextField PositionField;
    private javax.swing.JLabel PositionLabel;
    private javax.swing.JButton RightButton;
    private javax.swing.JTextField RootDirectoryField;
    private javax.swing.JLabel RootLabel;
    private javax.swing.JComboBox RotationComboBox;
    private javax.swing.JLabel RotationControlLabel;
    private javax.swing.JPanel RotationControlPanel;
    private javax.swing.JLabel RotationLabel;
    private javax.swing.JPanel RotationPanel;
    private javax.swing.JLabel RotationSampleLabel;
    private javax.swing.JCheckBox SaveCheckBox;
    private javax.swing.JPanel SaveImagesPanel;
    private javax.swing.JButton SetEndButton;
    private javax.swing.JButton SetStartButton;
    private javax.swing.JButton ShutterButton;
    private javax.swing.JCheckBox ShutterRotationCheckBox;
    private javax.swing.JCheckBox ShutterStackCheckBox;
    private javax.swing.JCheckBox StackCheckBox;
    private javax.swing.JComboBox StackComboBox;
    private javax.swing.JPanel StackPanel;
    private javax.swing.JLabel StageControlLabel;
    private javax.swing.JPanel StageControlPanel;
    private javax.swing.JTextField StartField;
    private javax.swing.JLabel StartLabel;
    private javax.swing.JComboBox StepAngleComboBox;
    private javax.swing.JLabel StepAngleLabel;
    private javax.swing.JTextField StepField;
    private javax.swing.JLabel StepLabel;
    private javax.swing.JSpinner TimeFrames;
    private javax.swing.JCheckBox TimeLapseCheckBox;
    private javax.swing.JPanel TimeLapsePanel;
    private javax.swing.JButton UPButton;
    private javax.swing.JButton UPUPButton;
    private javax.swing.JTextField UpField;
    private javax.swing.JTextField UpUpField;
    private javax.swing.JPanel jPanel2;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private void setPreferredSize(int i, int i0) {
        throw new UnsupportedOperationException("Not yet implemented");
    }
}
